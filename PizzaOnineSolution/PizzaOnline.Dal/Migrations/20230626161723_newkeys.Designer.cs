// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaOnline.Dal;

#nullable disable

namespace PizzaOnline.Dal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230626161723_newkeys")]
    partial class newkeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzaOnline.Dal.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaOnline.Dal.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("PizzaOnline.Dal.Entities.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuffedCrust")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "seasoned-tomato sauce, mozzarella",
                            ImageUrl = "/Images/pizza_1.jpg",
                            IsDeleted = false,
                            Name = "Margherita",
                            Size = "Small",
                            StuffedCrust = "Normal",
                            UnitPrice = 1000
                        },
                        new
                        {
                            Id = 2,
                            Description = "tomato sauce, ham, sweetcorn, mozzarella",
                            ImageUrl = "/Images/pizza_2.jpg",
                            IsDeleted = false,
                            Name = "Ham & Sweetcorn",
                            Size = "Medium",
                            StuffedCrust = "Cheese",
                            UnitPrice = 1500
                        },
                        new
                        {
                            Id = 3,
                            Description = "tomato sauce, ham, mushrooms, mozzarella, sweetcorn",
                            ImageUrl = "/Images/pizza_3.jpg",
                            IsDeleted = false,
                            Name = "SonGoKu",
                            Size = "Large",
                            StuffedCrust = "Normal",
                            UnitPrice = 2000
                        },
                        new
                        {
                            Id = 4,
                            Description = "tomato sauce, salami, bacon, onions, pepperoni pepper, mozzarella",
                            ImageUrl = "/Images/pizza_4.jpg",
                            IsDeleted = false,
                            Name = "Hungarian",
                            Size = "Medium",
                            StuffedCrust = "Jalapeno",
                            UnitPrice = 3000
                        },
                        new
                        {
                            Id = 5,
                            Description = "cream base, mozzarella, garlic, tomato slices, sausage, ham",
                            ImageUrl = "/Images/pizza_5.jpg",
                            IsDeleted = false,
                            Name = "Garlic-Cream",
                            Size = "Small",
                            StuffedCrust = "Normal",
                            UnitPrice = 3000
                        },
                        new
                        {
                            Id = 6,
                            Description = "bolognese sauce, mozzarella",
                            ImageUrl = "/Images/pizza_6.jpg",
                            IsDeleted = false,
                            Name = "Bolognese",
                            Size = "Medium",
                            StuffedCrust = "Normal",
                            UnitPrice = 2500
                        },
                        new
                        {
                            Id = 7,
                            Description = "tomato sauce, marble cheese, parmesan, cheddar, mozzarella",
                            ImageUrl = "/Images/pizza_7.jpg",
                            IsDeleted = false,
                            Name = "Four Cheese",
                            Size = "Large",
                            StuffedCrust = "Beacon",
                            UnitPrice = 2300
                        });
                });

            modelBuilder.Entity("PizzaOnline.Dal.Entities.OrderItem", b =>
                {
                    b.HasOne("PizzaOnline.Dal.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PizzaOnline.Dal.Entities.Pizza", "Pizza")
                        .WithMany("PizzaOrders")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzaOnline.Dal.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("PizzaOnline.Dal.Entities.Pizza", b =>
                {
                    b.Navigation("PizzaOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
